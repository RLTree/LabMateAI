# .github/workflows/python-publish.yml

# This workflow will upload a Python Package to PyPI using Twine when a release is created.
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write  # Needed for uploading to PyPI

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Python version
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel twine
          pip install -r requirements.txt

      # Step 4: Build the package
      - name: Build Package
        run: |
          python setup.py sdist bdist_wheel

      # Step 5: Publish the package to PyPI
      - name: Publish Package
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*

      # Optional Step: Verify the uploaded package
      - name: Verify PyPI Upload (Optional)
        run: |
          pip install labmateai --index-url https://upload.pypi.org/legacy/