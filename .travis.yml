language: python

python:
  - "3.8"
  - "3.9"

# Enable caching for pip to speed up builds by reusing previously downloaded packages
cache: pip

# Add PostgreSQL service for testing database interactions
services:
  - postgresql

# Environment variables for PostgreSQL
env:
  global:
    # Define a separate test database
    - POSTGRES_DB=de66dcp38h2o4m
    - POSTGRES_USER=u57kmcm3orlrse
    - POSTGRES_PASSWORD=p9ba3c40033c848824b46a92c562a41564a01454a9de36d46c8435d518715185f
    # DATABASE_URL for the test database
    - TEST_DATABASE_URL=postgresql://u57kmcm3orlrse:p9ba3c40033c848824b46a92c562a41564a01454a9de36d46c8435d518715185f@c1v04v8krpfbct.cluster-czrs8kj4isg7.us-east-1.rds.amazonaws.com:5432/de66dcp38h2o4m


# Upgrade pip and setuptools before installation
before_install:
  - pip install --upgrade pip setuptools wheel  # Add wheel for building distributions

# Install project dependencies and the project itself
install:
  - pip install -r requirements.txt
  - pip install .

# Set up the PostgreSQL database and run migrations
before_script:
  # Verify PostgreSQL installation
  - psql --version
  
  # Create the test database
  - psql -c 'CREATE DATABASE labmate_test_db;' -U postgres
  
  
  # Install Alembic for database migrations
  - pip install alembic
  
  # Run Alembic migrations to set up the test database schema
  # Ensure that alembic.ini is correctly configured to use TEST_DATABASE_URL for testing
  - alembic upgrade head

# Run tests with coverage reporting
script:
  - pytest --cov=labmateai --cov-report=xml --cov-report=term-missing

# After successful tests, upload coverage reports to Codecov
after_success:
  - bash <(curl -s https://codecov.io/bash)

# Deployment configuration to PyPI
deploy:
  provider: pypi
  username: __token__  # Use '__token__' if deploying with an API token
  password:
    secure: "<pypi-AgEIcHlwaS5vcmcCJGFiZjdkNWY4LTFhZWUtNGRmZS04MWE2LWNlNGUyMWU4ZWJlMQACKlszLCJiYjI2YzRkMC1lZjA4LTRlZmMtOTZmMS0xMTkyNzFjZjM4ZmMiXQAABiATN_pxBDKC66Ol0lFe5jKB_FOdGeX4w93SY0qi9hY1cg>"
  on:
    tags: true  # Deploy only when a commit is tagged
    branch: master  # Deploy only when a commit is on the master branch
  distributions: "sdist bdist_wheel"  # Build both source and wheel distributions

# Email notifications for build results
notifications:
  email:
    recipients:
      - tnoblin@health.ucsd.edu
    on_success: change  # Notify only if the build status changes to success
    on_failure: always  # Always notify on failures